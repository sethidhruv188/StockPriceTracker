name: Scheduled Branch Merges

on:
  schedule:
    - cron: '40 0 4 7 *'  # July 3, 2025, 8:40 PM EDT (00:40 UTC July 4)
    - cron: '34 17 4 7 *' # July 4, 2025, 1:34 PM EDT (17:34 UTC)
    - cron: '9 22 5 7 *'  # July 5, 2025, 6:09 PM EDT (22:09 UTC)
    - cron: '17 20 6 7 *' # July 6, 2025, 4:17 PM EDT (20:17 UTC)
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to merge into main'
        required: true
        default: 'test2'

jobs:
  merge-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Merge branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          CURRENT_TIME=$(date -u +"%Y-%m-%d %H:%M")
          echo "Current UTC time: $CURRENT_TIME"
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            BRANCH="${{ github.event.inputs.branch }}"
            git checkout "$BRANCH"
            git checkout main
            git merge --no-ff "$BRANCH" -m "Merged $BRANCH into main"
            git push origin main
          elif [[ "$CURRENT_TIME" > "2025-07-04 00:20" && "$CURRENT_TIME" < "2025-07-04 01:20" ]]; then
            git checkout test2
            git checkout main
            git merge --no-ff test2 -m "Merged test2 into main"
            git push origin main
          elif [[ "$CURRENT_TIME" > "2025-07-04 17:14" && "$CURRENT_TIME" < "2025-07-04 17:59" ]]; then
            git checkout feature/moving-average-csv
            git checkout main
            git merge --no-ff feature/moving-average-csv -m "Merged moving average and CSV storage features"
            git push origin main
          elif [[ "$CURRENT_TIME" > "2025-07-05 21:49" && "$CURRENT_TIME" < "2025-07-05 22:59" ]]; then
            git checkout feature/visualization
            git checkout main
            git merge --no-ff feature/visualization -m "Merged visualization feature with Matplotlib"
            git push origin main
          elif [[ "$CURRENT_TIME" > "2025-07-06 19:57" && "$CURRENT_TIME" < "2025-07-06 20:57" ]]; then
            git checkout feature/readme
            git checkout main
            git merge --no-ff feature/readme -m "Merged README and finalized documentation"
            git push origin main
          fi
          
