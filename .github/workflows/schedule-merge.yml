name: Scheduled Branch Merges

on:
  schedule:
    - cron: '40 0 4 7 *'  # July 3, 2025, 8:40 PM EDT (00:40 UTC July 4)
    - cron: '34 17 4 7 *' # July 4, 2025, 1:34 PM EDT (17:34 UTC)
    - cron: '9 22 5 7 *'  # July 5, 2025, 6:09 PM EDT (22:09 UTC)
    - cron: '17 20 6 7 *' # July 6, 2025, 4:17 PM EDT (20:17 UTC)
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to merge into main'
        required: true
        default: 'test1'

jobs:
  merge-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Merge branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          CURRENT_TIME=$(date -u +"%Y-%m-%d %H:%M")
          echo "Current UTC time: $CURRENT_TIME"
          merge_branch() {
            BRANCH=$1
            COMMIT_MESSAGE=$2
            git checkout "$BRANCH" || { echo "Branch $BRANCH not found"; exit 1; }
            git checkout main
            if git merge --no-ff "$BRANCH" -m "$COMMIT_MESSAGE"; then
              git push origin main
            else
              echo "Merge conflict detected for $BRANCH. Aborting merge."
              exit 1
            fi
          }
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            merge_branch "${{ github.event.inputs.branch }}" "Merged ${{ github.event.inputs.branch }} into main"
          elif [[ "$CURRENT_TIME" > "2025-07-04 00:20" && "$CURRENT_TIME" < "2025-07-04 01:20" ]]; then
            merge_branch "test2" "Merged test2 into main"
          elif [[ "$CURRENT_TIME" > "2025-07-04 17:14" && "$CURRENT_TIME" < "2025-07-04 17:59" ]]; then
            merge_branch "feature/moving-average-csv" "Merged moving average and CSV storage features"
          elif [[ "$CURRENT_TIME" > "2025-07-05 21:49" && "$CURRENT_TIME" < "2025-07-05 22:59" ]]; then
            merge_branch "feature/visualization" "Merged visualization feature with Matplotlib"
          elif [[ "$CURRENT_TIME" > "2025-07-06 19:57" && "$CURRENT_TIME" < "2025-07-06 20:57" ]]; then
            merge_branch "feature/readme" "Merged README and finalized documentation"
          fi
          
